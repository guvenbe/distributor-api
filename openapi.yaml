openapi: 3.0.2
info:
  version: '1.1'
  title: SFG Beer Works - Distributor API
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl.txt'
  contact:
    name: John Thompson
    url: 'https://springframework.guru'
servers:
  - url: 'http://localhost:8080'
    description: Local Host
paths:
  /api/v1/beer:
    get:
      description: List Beers
      tags:
        - Beer
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/BeerName'
        - $ref: '#/components/parameters/BeerStyle'
      responses:
        '200':
          description: List Beers Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BeerPagedList'
  '/api/v1/beer/{beerId}':
    parameters:
      - $ref: '#/components/parameters/BeerId'
    get:
      description: Get BeerDto by Id
      tags:
        - BeerDto
      responses:
        '200':
          description: List Beers Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '404':
          description: Not Found
  /api/v1/order/status:
    post:
      description: Webhook post to reecive notifcations of order status changes.
      requestBody:
        description: Order Status Update
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  format: uuid
                orderStatus:
                  $ref: '#/components/schemas/OrderStatusUpdate'
      responses:
        '200':
          description: Okay
components:
  parameters:
    BeerId:
      name: beerId
      in: path
      description: Beer Id
      required: true
      schema:
        type: string
        format: uuid
    BeerName:
      name: beerName
      in: query
      description: Beer Name
      required: false
      schema:
        type: string
    BeerStyle:
      name: beerStyle
      in: query
      description: Beer Style
      required: false
      schema:
        type: string
    Page:
      name: pageNumber
      in: query
      description: Page number.
      required: false
      schema:
        type: integer
        format: int32
        default: 1
    PageSize:
      name: pageSize
      in: query
      description: Page size.
      required: false
      schema:
        type: integer
        format: int32
        default: 25
  schemas:
    BaseItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        version:
          type: integer
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
    Beer:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseItem'
      required:
        - beerName
        - beerStyle
        - quantityOnHand
        - price
      properties:
        beerName:
          type: string
        beerStyle:
          type: string
        quantityOnHand:
          type: integer
        price:
          type: string
          format: decimal
    BeerPagedList:
      type: object
      allOf:
        - $ref: '#/components/schemas/PagedResponse'
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Beer'
    OrderStatusEnum:
      type: string
      enum:
        - NEW
        - READY
        - PICKED_UP
    OrderStatusUpdate:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseItem'
      properties:
        orderId:
          type: string
          format: uuid
        customerRef:
          type: string
        orderStatus:
          $ref: '#/components/schemas/OrderStatusEnum'
    PagedResponse:
      type: object
      properties:
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
            offset:
              type: integer
              format: int32
            pageNumber:
              type: integer
              format: int32
            pageSize:
              type: integer
              format: int32
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
        totalElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        sort:
          type: object
          properties:
            sorted:
              type: boolean
            unsorted:
              type: boolean
        first:
          type: boolean
